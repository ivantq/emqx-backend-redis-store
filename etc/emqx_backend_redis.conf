##--------------------------------------------------------------------
## Redis Backend Plugin
##--------------------------------------------------------------------
## Redis Server cluster type
## single    Single redis server 单服务
## sentinel  Redis cluster through sentinel 哨兵集群
## cluster   Redis through cluster redis集群
backend.redis.type = single

## Redis server address.
##
## Value: Port | IP:Port
##
## Single Redis Server: 127.0.0.1:6379, localhost:6379  单服务redis
## Redis Sentinel: 127.0.0.1:26379,127.0.0.2:26379,127.0.0.3:26379 集群redis
## Redis Cluster: 127.0.0.1:6379,127.0.0.2:6379,127.0.0.3:6379 集群redis
backend.redis.server = 127.0.0.1:6379

## Redis sentinel cluster name.
##
## Value: String
## backend.redis.sentinel = mymaster

## Redis pool size.
## 线程池配置
## Value: Number
backend.redis.pool = 8

## Redis database no.
## redis数据库编号
## Value: Number
backend.redis.database = 0

## Redis password.
## 密码
## Value: String
## auth.redis.password =

## Redis query timeout
## 查询超时
## Value: Duration
## auth.redis.query_timeout = 5s

## 订阅的 Redis channel 名称
backend.redis.channel = mqtt_channel

## client connected  客户连接
## %c clientId
## %t timestamp   设置客户连接状态为1，在线时间
backend.redis.client_connected_cmd = hmset mqtt:client:%c state 1 online_at %t

## client disconnected
## %c clientId
## %t timestamp 设置客户连接状态为0，离线时间
backend.redis.client_disconnected_cmd = hmset mqtt:client:%c state 0 offline_at %t

## message retain  遗留消息
## %topic message topic
## %s redis field string
backend.redis.message_retain_cmd = mqtt:retain:

## Maximum number of retained messages. 0 means no limit.
##
## Value: Number >= 0
backend.redis.retainer.max_retained_messages = 0

## Maximum retained message size.
## 遗留消息最大值设置
## Value: Bytes
backend.redis.retainer.max_payload_size = 1MB

## Expiry interval of the retained messages. Never expire if the value is 0.
##
## Value: Duration
##  - h: hour
##  - m: minute
##  - s: second
##
## Examples:
##  - 2h:  2 hours
##  - 30m: 30 minutes
##  - 20s: 20 seconds
##
## Defaut: 0
backend.redis.retainer.expiry_interval = 0

## Redis Backend Rules
